<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LegalHuB</title>
        <link rel="icon" href="/pic/logo1.png" type="image/png">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
        integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/login.css">
</head>

<body>

    <%- include('../includes/navbar.ejs') %>

        <main>
            <%- include("../includes/flash.ejs") %>
            <%- body %>
        </main>

        <%- include('../includes/footer.ejs') %>

                        <div class="gtranslate_wrapper"></div>
            <script>
                // Bootstrap custom validation
                (function () {
                    'use strict'

                    // Fetch all the forms we want to apply custom validation to
                    var forms = document.querySelectorAll('.needs-validation')

                    // Loop over them and prevent submission
                    Array.prototype.slice.call(forms).forEach(function (form) {
                        form.addEventListener('submit', function (event) {
                            if (!form.checkValidity()) {
                                event.preventDefault()
                                event.stopPropagation()
                            }

                            form.classList.add('was-validated')
                        }, false)
                    })
                })()
            </script>

            <script>window.gtranslateSettings = { "default_language": "en", "detect_browser_language": true, "wrapper_selector": ".gtranslate_wrapper" }</script>
            <script src="https://cdn.gtranslate.net/widgets/latest/float.js" defer></script>

            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
                integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
                crossorigin="anonymous"></script>
            <script src="/js/login.js"></script>
            <script>
                                // Toggle Navbar Links and Close on Outside Click
                document.addEventListener("DOMContentLoaded", function() {
                var toggle = document.getElementById('navbarToggle');
                var links = document.getElementById('navbarLinks');
                if(toggle && links) {
                toggle.onclick = function() {
                    links.classList.toggle('active');
                };
                document.addEventListener('click', function(event) {
                    if (!links.contains(event.target) && !toggle.contains(event.target)) {
                        links.classList.remove('active');
                    }
                });
                }
            });

                (function(){
                    // Check if chatbase is already initialized
                    if(!window.chatbase || window.chatbase("getState") !== "initialized") {
                        // Queue chatbase commands if not ready yet
                        window.chatbase = (...arguments) => {
                            if (!window.chatbase.q) {
                                window.chatbase.q = [];
                            }
                            window.chatbase.q.push(arguments);
                        };

                        // Setup Proxy for command tracking
                        window.chatbase = new Proxy(window.chatbase, {
                            get(target, prop) {
                                if (prop === "q") {
                                    return target.q;
                                }
                                return (...args) => target(prop, ...args);
                            }
                        });
                    }

                    // Load the actual chatbase embed script after the page loads
                    const onLoad = function() {
                        const script = document.createElement("script");
                        script.src = "https://www.chatbase.co/embed.min.js";
                        script.id = "vb1bB3pcTaS5bZJbzZhBe"; // This is YOUR chatbot ID
                        script.domain = "www.chatbase.co";
                        document.body.appendChild(script);
                    };

                    // Wait for page load to inject the script
                    if(document.readyState === "complete") {
                        onLoad();
                    } else {
                        window.addEventListener("load", onLoad);
                    }
                })();
            </script>

</body>

</html>