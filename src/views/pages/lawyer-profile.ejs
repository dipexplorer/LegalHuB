<% layout("layouts/boilerplate") %>

<style>
    body {
        background: #0f0f15;
        font-family: 'Segoe UI', Tahoma, sans-serif;
        color: #f5f5f5;
        margin: 0;
        padding: 0;
        line-height: 1.6;
    }

    .profile-wrapper {
        max-width: 1100px;
        margin: 50px auto;
        padding: 0 20px;
    }

    .profile-card {
        display: flex;
        flex-wrap: wrap;
        background: linear-gradient(145deg, #1b1b2b, #1a1a24);
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0px 10px 35px rgba(0, 0, 0, 0.5);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .profile-card:hover {
        transform: translateY(-6px);
        box-shadow: 0px 15px 45px rgba(179, 71, 255, 0.35);
    }

    /* Left Column */
    .profile-left {
        flex: 1 1 320px;
        background: linear-gradient(160deg, #26264a, #1c1c3a);
        text-align: center;
        padding: 40px 20px;
        border-right: 1px solid rgba(255, 255, 255, 0.05);
    }

    .profile-left img {
        width: 180px;
        height: 180px;
        border-radius: 50%;
        object-fit: cover;
        border: 5px solid transparent;
        transition: transform 0.3s ease, box-shadow 0.3s ease, border-color 0.3s ease;
    }

    .verified-avatar {
        border-color: #28a745;
        box-shadow: 0px 0px 15px rgba(40, 167, 69, 0.6);
    }

    .not-verified-avatar {
        border-color: #dc3545;
        box-shadow: 0px 0px 15px rgba(220, 53, 69, 0.6);
    }

    .profile-left img:hover {
        transform: scale(1.08);
    }

    .profile-left h2 {
        margin-top: 20px;
        font-size: 2rem;
        color: #e58fff;
        font-weight: 700;
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 8px;
        flex-wrap: wrap;
    }

    .status-badge {
        font-size: 0.8rem;
        padding: 4px 12px;
        border-radius: 20px;
        font-weight: bold;
        display: inline-flex;
        align-items: center;
        gap: 4px;
        cursor: default;
        transition: transform 0.2s ease;
    }

    .status-badge:hover {
        transform: scale(1.05);
    }

    .status-verified {
        background: #28a745;
        color: white;
        box-shadow: 0 2px 6px rgba(40, 167, 69, 0.4);
    }

    .status-not-verified {
        background: #dc3545;
        color: white;
        box-shadow: 0 2px 6px rgba(220, 53, 69, 0.4);
    }

    .profile-left p {
        color: #bdbdbd;
        font-size: 1rem;
        margin-top: 5px;
    }

    .specialization-badge {
        background: linear-gradient(90deg, #9c27b0, #b347ff);
        color: white;
        padding: 8px 18px;
        border-radius: 20px;
        font-size: 0.9rem;
        display: inline-block;
        margin-top: 14px;
        box-shadow: 0px 3px 12px rgba(179, 71, 255, 0.45);
    }

    /* Buttons */
    .cta-buttons {
        display: flex;
        gap: 15px;
        margin-top: 25px;
        flex-wrap: wrap;
    }

    .cta-btn {
        flex: 1;
        background: linear-gradient(90deg, #8e2de2, #b347ff);
        color: white;
        padding: 14px 20px;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        box-shadow: 0px 4px 15px rgba(179, 71, 255, 0.4);
    }

    .cta-btn:hover {
        background: linear-gradient(90deg, #7218c2, #9c27b0);
        transform: translateY(-2px);
        box-shadow: 0px 6px 18px rgba(179, 71, 255, 0.5);
    }

    /* Right Column (Improved) */
    .profile-right {
        flex: 2 1 600px;
        padding: 35px;
        display: flex;
        flex-direction: column;
        gap: 20px;
        background: rgba(255, 255, 255, 0.02);
        backdrop-filter: blur(10px);
        animation: fadeIn 0.5s ease-in-out;
    }

    .section {
        padding: 20px 24px;
        background: rgba(35, 35, 58, 0.85);
        border-radius: 16px;
        border: 1px solid rgba(255, 255, 255, 0.06);
        box-shadow: 0 4px 14px rgba(0, 0, 0, 0.3);
        transition: background 0.3s ease, transform 0.3s ease;
    }

    .section:hover {
        background: rgba(44, 44, 71, 0.95);
        transform: translateY(-3px);
    }

    .section h3 {
        color: #e58fff;
        font-size: 1.3rem;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 12px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.08);
        padding-bottom: 6px;
    }

    .section-icon {
        font-size: 1.2rem;
        color: #b347ff;
    }

    .section p {
        color: #e0e0e0;
        margin: 6px 0;
        font-size: 0.95rem;
    }

    /* Stats Grid */
    .stats-grid {
        display: flex;
        flex-wrap: wrap;
        gap: 16px;
    }

    .stat-card {
        flex: 1 1 calc(33.333% - 10px);
        background: rgba(50, 50, 80, 0.8);
        border-radius: 14px;
        padding: 16px;
        display: flex;
        align-items: center;
        gap: 12px;
        box-shadow: 0 4px 14px rgba(0,0,0,0.3);
        transition: transform 0.3s ease, background 0.3s ease;
    }

    .stat-card:hover {
        background: rgba(60, 60, 100, 0.9);
        transform: translateY(-4px);
    }

    .stat-icon {
        background: linear-gradient(135deg, #8e2de2, #b347ff);
        color: white;
        font-size: 1.3rem;
        padding: 12px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 3px 8px rgba(179, 71, 255, 0.4);
    }

    .stat-info strong {
        display: block;
        font-size: 1.2rem;
        color: #fff;
    }

    .stat-info span {
        font-size: 0.85rem;
        color: #bbb;
    }

    /* Tag Chips */
    .tag-list {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    .tag {
        background: linear-gradient(120deg, #4e4e70, #3a3a55);
        padding: 7px 16px;
        border-radius: 20px;
        font-size: 0.85rem;
        color: #f0f0f0;
        transition: all 0.3s ease;
        box-shadow: 0px 2px 8px rgba(179, 71, 255, 0.2);
    }

    .tag:hover {
        background: linear-gradient(120deg, #6b52b5, #5e479e);
        transform: scale(1.08);
        box-shadow: 0 4px 12px rgba(179, 71, 255, 0.4);
    }

    /* Contact & Availability Styling */
    .contact-row, .availability-row {
        display: flex;
        justify-content: space-between;
        margin: 8px 0;
    }

    .contact-label, .availability-label {
        color: #aaa;
        font-weight: 500;
    }

    .contact-value, .availability-value {
        color: #fff;
        font-weight: 600;
    }

    .contact-value a {
        color: #e58fff;
        text-decoration: none;
    }

    /* Floating Chat Button */
    .chat-float {
        position: fixed;
        bottom: 25px;
        right: 25px;
        background: linear-gradient(135deg, #8e2de2, #b347ff);
        color: white;
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 28px;
        cursor: pointer;
        box-shadow: 0px 4px 20px rgba(179, 71, 255, 0.5);
        transition: transform 0.3s ease;
        z-index: 1000;
    }

    .chat-float:hover {
        transform: scale(1.1) rotate(5deg);
    }

    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }

    @media (max-width: 768px) {
        .profile-card {
            flex-direction: column;
        }
        .profile-left, .profile-right {
            padding: 25px;
        }
        .cta-buttons {
            flex-direction: column;
        }
        .stats-grid {
            flex-direction: column;
        }
    }

 /* Booking Modal Styles */
#bookingModal {
  display: none; /* hide modal by default */
  position: fixed;
  top: 0; left: 0; right: 0; bottom: 0;
  background: rgba(0,0,0,0.7);
  justify-content: center;
  align-items: center;
  z-index: 1000;
  backdrop-filter: blur(3px);
}

#bookingModal.active {
  display: flex; /* show modal when active */
}

/* Style the form inside the modal */
#bookingModal form {
  background: linear-gradient(145deg, #1b1b2b, #1a1a24);
  padding: 30px;
  border-radius: 12px;
  max-width: 450px;
  width: 90%;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

#bookingModal h2 {
  text-align: center;
  margin-bottom: 25px;
  color: #e58fff;
  font-weight: 700;
}

  #bookingForm label {
    font-weight: 600;
    font-size: 0.95rem;
    display: flex;
    flex-direction: column;
    gap: 8px;
    margin-bottom: 20px;
    color: #f5f5f5;
  }

  #bookingForm input[type="date"],
  #bookingForm select,
  #bookingForm textarea {
    padding: 12px 15px;
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    font-size: 1rem;
    background: rgba(35, 35, 58, 0.85);
    color: #eee;
    resize: vertical;
    transition: all 0.3s ease;
  }

  #bookingForm input[type="date"]:focus,
  #bookingForm select:focus,
  #bookingForm textarea:focus {
    outline: none;
    border-color: #b347ff;
    box-shadow: 0 0 0 3px rgba(179, 71, 255, 0.3);
  }

  #bookingForm textarea {
    min-height: 100px;
  }

  #bookingForm .form-buttons {
    display: flex;
    gap: 15px;
    margin-top: 10px;
  }

  #bookingForm button[type="submit"] {
    flex: 1;
    background: linear-gradient(90deg, #8e2de2, #b347ff);
    border: none;
    padding: 14px 0;
    color: white;
    font-weight: 700;
    font-size: 1rem;
    border-radius: 10px;
    cursor: pointer;
    box-shadow: 0 4px 15px rgba(179, 71, 255, 0.5);
    transition: all 0.3s ease;
  }
  
  #bookingForm button[type="submit"]:hover {
    background: linear-gradient(90deg, #7218c2, #9c27b0);
    transform: translateY(-2px);
    box-shadow: 0 6px 18px rgba(179, 71, 255, 0.6);
  }

  #bookingForm button[type="button"] {
    flex: 1;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    padding: 14px 0;
    color: #f5f5f5;
    font-weight: 600;
    font-size: 1rem;
    border-radius: 10px;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  #bookingForm button[type="button"]:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: translateY(-2px);
  }

  #loadingIndicator {
    text-align: center;
    color: #e58fff;
    font-size: 0.9rem;
    margin: 10px 0;
    display: none;
  }

  #loadingIndicator.show {
    display: block;
  }

  /* Review Section Container */
.reviews-section,
.review-view {
    max-width: 1100px;
    margin: 40px auto;
    padding: 20px;
}

/* Review Cards Grid */
.review-view .row {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    justify-content: center;
}

/* Review Card Styling */
.review-card {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%; /* forces equal height */
    padding: 20px;
    background: linear-gradient(145deg, #1b1b2b, #1a1a24);
    border-radius: 14px;
    border: 1px solid rgba(255, 255, 255, 0.05);
    box-shadow: 0 4px 14px rgba(0,0,0,0.3);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.review-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 18px rgba(179, 71, 255, 0.4);
}

/* Reviewer Header */
.review-card .heading {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 12px;  
}

.reviewer-profile {
    width: 45px;
    height: 45px;
    border-radius: 50%;
    object-fit: cover;
    border: 2px solid #b347ff;
}

/* Reviewer Name */
.review-card .card-title {
    font-size: 1rem;
    font-weight: 600;
    color: #fff;
}

/* Star Ratings */
.star {
    color: #f5b301;
    font-size: 1rem;
    margin-right: 2px;
}

/* Review Comment */
.review-card p {
    font-size: 0.95rem;
    line-height: 1.5;
    color: #e0e0e0;
    flex-grow: 1;
}

/* "Read More" link */
.review-card a.text-primary {
    color: #b347ff !important;
    font-weight: 500;
}

.review-card a.text-primary:hover {
    text-decoration: underline;
}

/* Verified Text */
.review-card small {
    color: #bbb;
}

/* Review Form Styling */
.review-form textarea {
    background: rgba(35, 35, 58, 0.85);
    color: #eee;
    border-radius: 8px;
    border: 1px solid rgba(255,255,255,0.1);
    padding: 10px;
}

.review-form textarea:focus {
    outline: none;
    border-color: #b347ff;
    box-shadow: 0 0 0 2px rgba(179, 71, 255, 0.3);
}

/* Review Buttons */
.review-form button,
.reviews-section button {
    background: linear-gradient(90deg, #8e2de2, #b347ff);
    border: none;
    color: white;
    font-weight: 600;
    padding: 8px 14px;
    border-radius: 6px;
    transition: all 0.3s ease;
}

.review-form button:hover,
.reviews-section button:hover {
    background: linear-gradient(90deg, #7218c2, #9c27b0);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(179, 71, 255, 0.4);
}

/* Responsive Adjustments */
@media (max-width: 768px) {
    .review-view .row {
        grid-template-columns: 1fr;
    }
}

.custom-modal {
    display: none;
    position: fixed;
    z-index: 2000;
    left: 0; top: 0; right: 0; bottom: 0;
    background: rgba(0,0,0,0.6);
    justify-content: center;
    align-items: center;
    backdrop-filter: blur(4px);
}

.custom-modal-content {
    background: linear-gradient(145deg, #1b1b2b, #1a1a24);
    padding: 25px;
    border-radius: 14px;
    max-width: 500px;
    width: 90%;
    color: #fff;
    box-shadow: 0px 6px 20px rgba(0,0,0,0.5);
    animation: fadeIn 0.3s ease-in-out;
}

.custom-modal .close {
    float: right;
    font-size: 24px;
    cursor: pointer;
    color: #bbb;
}

.custom-modal .close:hover {
    color: #fff;
}
.username {
    font-weight: bold;
    font-size: 1.1rem;
    color: #e040fb;
}
.owner-label {
    background: #e040fb;
    color: #fff;
    padding: 2px 5px;
    border-radius: 5px;
    font-size: 0.7rem;
}
.model-stars{
    margin-bottom: 10px;
    margin-top: 10px;
}
/* Stars in modal */
.stars .star {
    padding-bottom: 20px;  
    color: #f5b301;
    font-size: 0.9rem;
}

/* Review Full Text */
.review-full-text {
    color: #e0e0e0;
    font-size: 0.95rem;
    line-height: 1.5;
    margin-top: 10px;
}

</style>

<div class="profile-wrapper">
    <div class="profile-card">
        <!-- Left Column -->
        <div class="profile-left">
        <img src="<%= lawyer.profilePicture %>" 
            alt="<%= lawyer.username %>" 
                class="<%= lawyer.lawyerProfile && lawyer.lawyerProfile.isVerified ? 'verified-avatar' : 'not-verified-avatar' %>">
        
        <h2>
            <%= lawyer.username %>
            <% if (lawyer.lawyerProfile && lawyer.lawyerProfile.isVerified) { %>
            <span class="status-badge status-verified">✔ Verified</span>
            <% } else { %>
            <span class="status-badge status-not-verified">✖ Not Verified</span>
            <% } %>
        </h2>

        <p><%= lawyer.email %></p>
            <div class="specialization-badge">
            <%= lawyer.lawyerProfile && lawyer.lawyerProfile.specialization ? lawyer.lawyerProfile.specialization : 'No specialization provided' %>
            </div>

            <div class="cta-buttons">
                <button id="bookBtn" data-lawyer-id="<%= lawyer._id %>" class="cta-btn">📅 Book</button>
                <a href="/chat/lawyer/<%= lawyer._id %>" class="cta-btn">💬 Chat</a>
            </div>
        </div>

        <!-- Right Column -->
        <div class="profile-right">
        <!-- About -->
        <div class="section about-section">
            <h3><span class="section-icon">ℹ️</span> About</h3>
            <p><%= lawyer.lawyerProfile && lawyer.lawyerProfile.bio ? lawyer.lawyerProfile.bio : 'No bio available' %></p>
        </div>

        <!-- Quick Stats -->
        <div class="stats-grid">
            <div class="stat-card">
            <div class="stat-icon">⏳</div>
            <div class="stat-info">
                <strong>
                <%= lawyer.lawyerProfile && lawyer.lawyerProfile.experience 
                        ? lawyer.lawyerProfile.experience 
                        : '0' %>
                </strong>
                <span>Years Experience</span>
            </div>
            </div>
            <div class="stat-card">
            <div class="stat-icon">📜</div>
            <div class="stat-info">
                <strong>
                <%= lawyer.lawyerProfile && lawyer.lawyerProfile.licenseNumber 
                        ? lawyer.lawyerProfile.licenseNumber 
                        : 'N/A' %>
                </strong>
                <span>License</span>
            </div>
            </div>
        </div>

        <!-- Languages -->
        <div class="section">
            <h3><span class="section-icon">🌐</span> Languages Spoken</h3>
            <div class="tag-list">
                <% if (lawyer.lawyerProfile && Array.isArray(lawyer.lawyerProfile.languagesSpoken)) { %>
                <% lawyer.lawyerProfile.languagesSpoken.forEach(lang => { %>
                    <span class="tag"><%= lang %></span>
                <% }) %>
                <% } else { %>
                <span class="tag">No languages specified</span>
                <% } %>
            </div>
        </div>

            <!-- Contact Info -->
            <div class="section contact-section">
                <h3><span class="section-icon">📞</span> Contact Info</h3>
                <div class="contact-row">
                <span class="contact-label">Email:</span> 
                <span class="contact-value">
                    <a href="mailto:<%= lawyer.email %>"><%= lawyer.email %></a>
                </span>
            </div>

            <% if (lawyer.phone) { %>
            <div class="contact-row">
                <span class="contact-label">Phone:</span> 
                <span class="contact-value"><%= lawyer.phone %></span>
            </div>
            <% } %>
            <div class="contact-row">
                <span class="contact-label">Location:</span> 
                <span class="contact-value">
                <%= lawyer.lawyerProfile && lawyer.lawyerProfile.city ? lawyer.lawyerProfile.city : 'Unknown City' %> |
                <%= lawyer.lawyerProfile && lawyer.lawyerProfile.state ? lawyer.lawyerProfile.state : 'Unknown State' %>
                </span>
            </div>
        </div>

        <!-- Availability & Fees -->
        <div class="section availability-section">
            <h3><span class="section-icon">💰</span> Availability & Fees</h3>
            <div class="availability-row">
            <span class="availability-label">Available Slots:</span>
            <span class="availability-value">
                <% if (lawyer.lawyerProfile && lawyer.lawyerProfile.availableSlots && lawyer.lawyerProfile.availableSlots.length > 0) { %>
                <%= lawyer.lawyerProfile.availableSlots.join(', ') %>
                <% } else { %>
                Not specified
                <% } %>
            </span>
            </div>
            <div class="availability-row">
                <span class="availability-label">Fees:</span>
                <span class="availability-value">
                $<%= lawyer.lawyerProfile && lawyer.lawyerProfile.fees ? lawyer.lawyerProfile.fees : '0' %>
                </span>
            </div>
        </div>
        <a href="/lawyers" class="cta-btn" style="max-width:200px;">⬅ Back to List</a>
        </div>
    </div>
    </div>

    <!-- Booking Modal -->
    <div id="bookingModal" role="dialog" aria-modal="true" aria-labelledby="bookingTitle" tabindex="-1">
    <form id="bookingForm" novalidate>
        <div id="bookingError" role="alert" style="color:red; margin-top:10px; display:none;"></div>

        <h2 id="bookingTitle">Book Appointment</h2>
        <input type="hidden" name="lawyerId" id="lawyerId" />

        <label for="apptDate">Date:
        <input type="date" id="apptDate" name="date" required min="<%= new Date().toISOString().split('T')[0] %>"/>
        </label>

        <label for="timeSlot">Time slot:
        <select id="timeSlot" name="timeSlot" required>
            <option value="">Select a date first</option>
        </select>
        </label>

        <div id="loadingIndicator">Loading available slots...</div>

        <label for="notes">Notes:
        <textarea name="notes" id="notes" placeholder="Optional details..."></textarea>
        </label>

        <div class="form-buttons">
        <button type="submit">Book</button>
        <button type="button" id="closeModal">Cancel</button>
        </div>
    </form>
    </div>


    <!-- Reviews -->
    <div class="reviews-section">
    <% if (currentUser) { %>
        <% if (lawyer._id.toString() !== currentUser._id.toString()) { %>
        <% if (!userHasReviewed) { %>  <!-- Check if the user hasn't already left a review -->
            <hr>
            <p>
            <button class="btn btn-outline-danger btn-sm mt-0" type="button" data-bs-toggle="collapse" data-bs-target="#collapseWidthExample" aria-expanded="false" aria-controls="collapseWidthExample"> Leave a review </button>
            </p>
            <div class="collapse" id="collapseWidthExample">
            <div class="card review-card card-body mx-auto ms-0" style="width: 100%;">
                <!-- Form for adding reviews -->
                <form action="/api/reviews/<%= lawyer._id %>" method="post" novalidate class="needs-validation">
                <div class="review-form">
                    <label for="rating" class="form-label bold2"><b>Rating:</b></label>
                    <fieldset class="starability-coinFlip">
                    <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="1" checked aria-label="No rating." />
                    <input type="radio" id="rate1" name="review[rating]" value="1" />
                    <label for="rate1">1 star.</label>
                    <input type="radio" id="rate2" name="review[rating]" value="2" />
                    <label for="rate2">2 stars.</label>
                    <input type="radio" id="rate3" name="review[rating]" value="3" />
                    <label for="rate3">3 stars.</label>
                    <input type="radio" id="rate4" name="review[rating]" value="4" />
                    <label for="rate4">4 stars.</label>
                    <input type="radio" id="rate5" name="review[rating]" value="5" />
                    <label for="rate5">5 stars.</label>
                    <span class="starability-focus-ring"></span>
                    </fieldset>
                </div>
                <div class="review-form">
                    <label for="comment" class="form-label bold2"><b>Comments:</b></label>
                    <textarea name="review[comment]" class="form-control focus-ring focus-ring-secondary border rounded-1" id="comment" placeholder="Add some comments here..." rows="4" required></textarea>
                    <div class="invalid-feedback">Please add some comments for review!</div>
                    <button class="btn btn-outline-secondary btn-sm mt-4">Submit</button>
                </div>
                </form>
            </div>
            </div>
        <% } else { %>
            <hr>
            <p class="text-secondary">⚠️ You have already left a review for this lawyer.</p>
        <% } %>
        <% } %>
    <% } %>
    </div>

<!-- All Reviews -->
<hr>
<div class="review-view">
    <% if (lawyer.lawyerProfile && Array.isArray(lawyer.lawyerProfile.reviews) && lawyer.lawyerProfile.reviews.length === 0) { %>
    <h6>⭐ No review posted yet for this lawyer.</h6>
    <% } %>
    <% if (lawyer.lawyerProfile && Array.isArray(lawyer.lawyerProfile.reviews) && lawyer.lawyerProfile.reviews.length > 0) { %>
    <h4>🌟 All Reviews</h4>
    <div class="row mt-4">
        <% lawyer.lawyerProfile.reviews.forEach((review, i) => { %>
        <div class="col-12 col-sm-6 col-md-4 mb-3">
            <div class="card review-card h-100 ms-0">
            <div class="card-body d-flex flex-column">
                <div class="heading">
                <h4 class="card-title">
                    <% if (review.author && review.author.profilePicture && review.author.profilePicture.purl) { %>
                    <img id="review_logo" src="<%= review.author.profilePicture.purl %>" alt="Reviewer" class="reviewer-profile n-review-profile">
                    <% } else { %>
                    <img id="review_logo" src="/pic/profile.jpg" alt="Reviewer" class="reviewer-profile n-review-profile">
                    <% } %>

                    <%= review.author ? review.author.username : "Unknown author" %>
                    <% if (review.author && currentUser && currentUser._id.toString() === review.author._id.toString()) { %>
                    <span style="font-size: 9px; opacity: 0.7;">owner</span>
                    <form action="/api/reviews/<%= lawyer._id %>/<%= review._id %>?_method=DELETE" method="POST" style="display:inline;">
                        <button type="submit" class="btn btn-danger btn-sm ms-2">
                        <i class="fa-solid fa-trash"></i>
                        </button>
                    </form>
                    <% } %>
                </h4>
                </div>

                <p class="card-text mt-2">
                <% for (let j = 1; j <= 5; j++) { %>
                    <% if (j <= review.rating) { %>
                    <i class="fa-solid fa-star star"></i>
                    <% } else { %>
                    <i class="fa-regular fa-star star"></i>
                    <% } %>
                <% } %>
                </p>

                <p class="flex-grow-1" onclick="openReviewModal('<%= i %>')" style="cursor:pointer;">
                <%= review.comment && review.comment.length > 150
                        ? review.comment.substring(0, 150) + '...'
                        : review.comment %>
                <% if (review.comment && review.comment.length > 150) { %>
                    <span class="text-primary"> Read more</span>
                <% } %>
                </p>

                <small style="font-size: 10px;">
                <i class='bx bx-error-circle'></i> Verified by LegalHuB
                </small>
            </div>
            </div>
        </div>

        <!-- Modal for full review text -->
        <div id="modal-<%= i %>" class="custom-modal">
            <div class="custom-modal-content">
            <span class="close" onclick="closeReviewModal('<%= i %>')">&times;</span>
            <div class="heading d-flex align-items-center mb-3">
                <% if (review.author && review.author.profilePicture && review.author.profilePicture.purl) { %>
                <img src="<%= review.author.profilePicture.purl %>" alt="Reviewer" class="reviewer-profile">
                <% } else { %>
                <img src="/pic/profile.jpg" alt="Reviewer" class="reviewer-profile">
                <% } %>
                <div class="ms-2">
                <div class="d-flex align-items-center gap-2">
                    <h5 class="username mb-0"><%= review.author ? review.author.username : "Unknown author" %></h5>
                    <% if (review.author && currentUser && currentUser._id.toString() === review.author._id.toString()) { %>
                    <span class="owner-label">Owner</span>
                    <% } %>
                </div>
                </div>
            </div>

            <div class="model-stars">
                <% for (let j = 1; j <= 5; j++) { %>
                <% if (j <= review.rating) { %>
                    <i class="fa-solid fa-star star"></i>
                <% } else { %>
                    <i class="fa-regular fa-star star"></i>
                <% } %>
                <% } %>
            </div>
            <p><%= review.comment %></p>
            </div>
        </div>
        <% }) %>
    </div>
    <% } else { %>
    <h6>⭐ No review posted yet for this lawyer.</h6>
    <% } %>
</div>

<script>
function openReviewModal(id) {
    document.getElementById("modal-" + id).style.display = "flex";
    document.addEventListener("keydown", escClose);
}

function closeReviewModal(id) {
    document.getElementById("modal-" + id).style.display = "none";
    document.removeEventListener("keydown", escClose);
}

function modalClickOutside(event, id) {
    if (event.target.classList.contains("custom-modal")) {
        closeReviewModal(id);
    }
}

function escClose(e) {
    if (e.key === "Escape") {
        document.querySelectorAll(".custom-modal").forEach(m => m.style.display = "none");
        document.removeEventListener("keydown", escClose);
    }
}
</script>

<script>
    const modal = document.getElementById('bookingModal');
    const bookBtn = document.getElementById('bookBtn');
    const closeModalBtn = document.getElementById('closeModal');
    const bookingForm = document.getElementById('bookingForm');
    const timeSlotSelect = document.getElementById('timeSlot');
    const apptDateInput = document.getElementById('apptDate');
    const lawyerIdInput = document.getElementById('lawyerId');
    const loadingIndicator = document.getElementById('loadingIndicator');
    const bookingError = document.getElementById('bookingError');

    const bookingSuccess = document.createElement('div');
    bookingSuccess.setAttribute('role', 'alert');
    bookingSuccess.style.color = 'green';
    bookingSuccess.style.marginTop = '10px';
    bookingSuccess.style.display = 'none';
    bookingForm.insertBefore(bookingSuccess, bookingForm.firstChild);

    function showError(message) {
        bookingError.textContent = message;
        bookingError.style.display = 'block';
        bookingSuccess.style.display = 'none';
    }

    function showSuccess(message) {
        bookingSuccess.textContent = message;
        bookingSuccess.style.display = 'block';
        bookingError.style.display = 'none';
    }

    function clearMessages() {
        bookingError.textContent = '';
        bookingError.style.display = 'none';
        bookingSuccess.textContent = '';
        bookingSuccess.style.display = 'none';
    }

    bookBtn.addEventListener('click', (e) => {
        lawyerIdInput.value = e.target.dataset.lawyerId;
        bookingForm.reset();
        timeSlotSelect.innerHTML = '<option value="">Select a date first</option>';
        clearMessages();
        modal.classList.add('active');
        apptDateInput.focus();
    });

    function closeModal() {
        modal.classList.remove('active');
        clearMessages();
    }
    closeModalBtn.addEventListener('click', closeModal);
    window.addEventListener('click', (e) => {
        if (e.target === modal) closeModal();
    });
    window.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') closeModal();
    });

    apptDateInput.addEventListener('change', async () => {
        const date = apptDateInput.value;
        const lawyerId = lawyerIdInput.value;
        clearMessages();

        if (!date) {
            timeSlotSelect.innerHTML = '<option value="">Select a date first</option>';
            return;
        }

        loadingIndicator.style.display = 'block';
        try {
            const res = await fetch(`/api/appointment/slots?lawyerId=${encodeURIComponent(lawyerId)}&date=${encodeURIComponent(date)}`, {
                headers: { 'Accept': 'application/json' }
            });

            let data;
            try {
                data = await res.json();
            } catch {
                throw new Error('Invalid server response');
            }

            if (!res.ok) throw new Error(data.message || data.msg || data.error || 'Failed to fetch slots');

            const slots = data.data || [];
            timeSlotSelect.innerHTML = '';

            if (slots.length === 0) {
                timeSlotSelect.innerHTML = '<option value="">No slots available</option>';
                showError('No available time slots for the selected date.');
            } else {
                slots.forEach(slot => {
                    const opt = document.createElement('option');
                    opt.value = slot;
                    opt.textContent = slot;
                    timeSlotSelect.appendChild(opt);
                });
            }
        } catch (error) {
            showError(error.message);
            timeSlotSelect.innerHTML = '<option value="">Error loading slots</option>';
        } finally {
            loadingIndicator.style.display = 'none';
        }
    });

    bookingForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        clearMessages();

        if (!bookingForm.checkValidity()) {
            bookingForm.reportValidity();
            return;
        }
        if (!timeSlotSelect.value) {
            showError('Please select a valid time slot.');
            return;
        }

        const submitBtn = bookingForm.querySelector('button[type="submit"]');
        const originalText = submitBtn.textContent;
        submitBtn.textContent = 'Booking...';
        submitBtn.disabled = true;

        try {
            const res = await fetch('/api/appointment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify({
                    lawyerId: lawyerIdInput.value,
                    date: apptDateInput.value,
                    timeSlot: timeSlotSelect.value,
                    notes: bookingForm.notes.value.trim()
                })
            });

            let data;
            try {
                data = await res.json();
            } catch {
                throw new Error('Invalid server response');
            }

            if (!res.ok) {
                // ✅ Now also checking for backend's `msg` key
                throw new Error(data.message || data.msg || data.error || 'Failed to book appointment');
            }

            showSuccess('✅ Appointment booked successfully!');
            setTimeout(() => {
                closeModal();
                location.reload();
            }, 1200);

        } catch (error) {
            showError(error.message);
        } finally {
            submitBtn.textContent = originalText;
            submitBtn.disabled = false;
        }
    });
</script>