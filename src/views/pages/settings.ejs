<% layout("layouts/boilerplate") %>

<style>
    body{
        color: #fff;
    }
    .settings-container {
        max-width: 1100px;
        margin: 2rem auto;
        padding: 2rem;
        background: rgba(31, 34, 53, 0.85);
        border-radius: 20px;
        box-shadow: 0 12px 40px rgba(0,0,0,0.6);
        backdrop-filter: blur(12px);
        border: 1px solid rgba(255,255,255,0.1);
        position: relative;
        z-index: 1;
    }

    h1 {
        font-size: 2.2rem;
        margin-bottom: 2rem;
        text-align: center;
        color: #fff;
        background: linear-gradient(to right, #6a5acd, #00bcd4);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    /* Profile Card */
    .profile-card {
        display: flex;
        align-items: center;
        gap: 1.5rem;
        margin-bottom: 2rem;
        padding: 1.5rem;
        background: linear-gradient(135deg, #2e314b, #262942);
        border-radius: 15px;
        flex-wrap: wrap;
        transition: 0.3s;
    }
    .profile-card:hover {
        box-shadow: 0 6px 18px rgba(106, 90, 205, 0.4);
        transform: translateY(-2px);
    }
    .profile-pic-wrapper {
        padding: 4px;
        border-radius: 50%;
        background: linear-gradient(135deg, #6a5acd, #00bcd4);
    }
    .profile-picture {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        object-fit: cover;
        display: block;
    }
    .profile-info-setting h2 {
        margin: 0;
        font-size: 1.5rem;
        color: #fff;
    }
    .accout_info{
        margin: 20px;
    }
    .role, .member-since {
        font-size: 0.9rem;
        color: #ccc;
        margin: 0.2rem 0;
    }
    .delete-account-wrapper {
        margin-top: 1rem;
    }

    /* Grid Layout */
    .settings-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
        gap: 1.5rem;
    }

    /* Settings Sections */
    .settings-section {
        background: linear-gradient(135deg, #2f324b, #24263d);
        padding: 1.2rem 1.5rem;
        border-radius: 15px;
        transition: all 0.3s ease;
        box-shadow: 0 4px 14px rgba(0,0,0,0.3);
    }
    .settings-section:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 20px rgba(0,0,0,0.5);
    }
    .settings-section h2 {
        display: flex;
        align-items: center;
        gap: 0.4rem;
        font-size: 1.2rem;
        margin-bottom: 0.8rem;
        color: #fff;
        font-weight: 600;
    }

    /* Setting Items */
    .setting-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.6rem 0;
        border-bottom: 1px solid #444;
    }
    .setting-item:last-child {
        border-bottom: none;
    }
    .setting-item label {
        font-weight: 500;
        color: #ddd;
    }
    .setting-hint {
        font-size: 0.8rem;
        color: #aaa;
        margin-top: 0.3rem;
    }

    /* Toggle Switch */
    .toggle-switch {
        position: relative;
        width: 44px;
        height: 24px;
    }
    .toggle-switch input {
        display: none;
    }
    .slider {
        position: absolute;
        inset: 0;
        background: #555;
        border-radius: 50px;
        cursor: pointer;
        transition: 0.3s;
    }
    .slider::before {
        content: "";
        position: absolute;
        left: 3px;
        top: 3px;
        width: 18px;
        height: 18px;
        border-radius: 50%;
        background: white;
        transition: 0.3s;
    }
    .toggle-switch input:checked + .slider {
        background: linear-gradient(135deg, #6a5acd, #00bcd4);
    }
    .toggle-switch input:checked + .slider::before {
        transform: translateX(20px);
    }

    /* Status Messages */
    .status-message {
        margin-top: 0.8rem;
        font-size: 0.9rem;
    }
    .status-message.success { color: #4caf50; }
    .status-message.error { color: #f44336; }

    /* Danger Zone */
    .danger-zone {
        background: rgba(244, 67, 54, 0.08);
        border-left: 4px solid #f44336;
    }
    .danger-zone h2 {
        color: #f44336;
    }

    /* Actions */
    .actions {
        display: flex;
        gap: 0.8rem;
        margin-top: 1rem;
        flex-wrap: wrap;
    }

    /* Buttons with Gradient */
    .btn {
        padding: 0.6rem 1.2rem;
        border: none;
        border-radius: 50px;
        cursor: pointer;
        font-weight: 600;
        transition: 0.3s;
        color: #fff;
    }
    .btn-warning {
        background: linear-gradient(135deg, #ff9800, #ff5722);
    }
    .btn-danger {
        background: linear-gradient(135deg, #f44336, #d32f2f);
    }
    .btn-small {
        background: linear-gradient(135deg, #3f51b5, #2196f3);
        padding: 0.3rem 0.8rem;
    }
    .btn:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 12px rgba(0,0,0,0.4);
    }

    /* Links */
    .link { color: #90caf9; text-decoration: none; }
    .link:hover { text-decoration: underline; }

    /* Responsive */
    @media (max-width: 768px) {
        .profile-card {
            flex-direction: column;
            text-align: center;
        }
        .actions {
            flex-direction: column;
            align-items: stretch;
        }
    }
</style>

<main class="settings-container">
    <h1>User Settings</h1>

    <!-- Profile Summary -->
    <section class="profile-card">
        <div class="profile-pic-wrapper">
            <img src="<%= user.profilePicture %>" alt="Profile Picture" class="profile-picture" />
        </div>
        <div class="profile-info-setting">
            <div>
                <h2><%= user.name || user.username || "Anonymous User" %></h2>
            </div>      
            <div>
                <p class="role">Role: <%= user.role %></p>
                <p class="member-since">Member since <%= user.createdAt.toDateString() %></p>
            </div>
            <!-- Delete Account button moved here -->
            <div class="delete-account-wrapper">
                <form method="POST" action="/api/users/delete?_method=DELETE" 
                    onsubmit="return confirm('Are you sure you want to delete your account permanently? This cannot be undone!');">
                    <button type="submit" class="btn btn-danger">Delete Account</button>
                </form>
            </div>
        </div>
    </section>

    <!-- Settings Grid -->
    <div class="settings-grid">

        <!-- Notification Preferences -->
        <section class="settings-section">
            <h2>üîî Notification Preferences</h2>
            <p>Manage how you receive updates from LegalHub.</p>

            <div class="setting-item">
                <label for="enablePush" class="setting-label">
                    <span>Enable Push Notifications</span>
                    <div class="toggle-switch">
                        <input type="checkbox" id="enablePush" />
                        <span class="slider"></span>
                    </div>
                </label>
            </div>
            <small class="setting-hint">Turn this on to receive browser notifications.</small>

            <!-- Subscribe Button -->
            <div class="setting-item">
                <label>Newsletter Subscription</label>
                <button id="subscribeBtn" class="btn btn-primary">Subscribe</button>
            </div>

            <div id="notificationStatus" class="status-message"></div>
        </section>

        <!-- Account Info -->
        <section class="settings-section">
            <div class="accout_info">
                <h2>üë§ Account Information</h2>
                <div class="setting-item">
                    <label>Email:</label>
                    <span><%= user.email %></span>
                </div>
                <div class="setting-item">
                    <label>Status:</label>
                    <span><%= user.isActive ? "Active ‚úÖ" : "Inactive ‚ùå" %></span>
                </div>
                <% if (user.role === "lawyer" && user.lawyerProfile) { %>
                    <div class="setting-item">
                        <label>Lawyer Profile:</label>
                        <span><a href="/lawyers/<%= user.lawyerProfile %>" class="link">View Profile</a></span>
                    </div>
                <% } %>
            </div>

            <div class="account_security">
                <!-- Security -->
                <section class="settings-section">
                    <h2>üîí Security</h2>
                    <div class="setting-item">
                        <span>Change Password</span>
                        <a href="/api/users/forgot-password" class="btn btn-small">Update</a>
                    </div>
                </section>
            </div>
        </section>

        <!-- Account Controls -->
        <section class="settings-section danger-zone">
            <h2>‚ö†Ô∏è Account Controls</h2>
            <p>Be careful! These actions affect your account status.</p>

            <div class="actions">
                <form method="POST" action="/api/users/toggle-active">
                    <button type="submit" class="btn btn-warning">
                        <%= user.isActive ? "Deactivate Account" : "Activate Account" %>
                    </button>
                </form>
                <!-- Delete Account button removed from here -->
            </div>
        </section>
    </div>
</main>

<script>
    document.addEventListener("DOMContentLoaded", async () => {
        const toggle = document.getElementById("enablePush");
        const statusEl = document.getElementById("notificationStatus");

        // Pre-check toggle if already subscribed
        const alreadySubscribed = await checkSubscription();
        toggle.checked = alreadySubscribed;
        if (alreadySubscribed) {
            statusEl.textContent = "‚úÖ Notifications are enabled.";
            statusEl.classList.add("success");
        }

        toggle.addEventListener("change", async () => {
            statusEl.textContent = "Processing...";
            statusEl.className = "status-message";

            try {
                if (toggle.checked) {
                    await subscribeToPush();
                    statusEl.textContent = "‚úÖ Notifications enabled.";
                    statusEl.classList.add("success");
                } else {
                    await unsubscribeFromPush();
                    statusEl.textContent = "‚ùå Notifications disabled.";
                    statusEl.classList.add("error");
                }
            } catch (err) {
                console.error(err);
                statusEl.textContent = "Error: " + err.message;
                statusEl.classList.add("error");
                toggle.checked = false;
            }
        });
    });
</script>
