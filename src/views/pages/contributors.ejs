<% layout("layouts/boilerplate") %>

<div class="contributors-page">
  
  <section class="contributors-banner">
    <div class="banner-container">
      <div class="banner-content">
        <div class="banner-text">
          <h2>
            <span class="emoji-icon globe-icon">
              <img
                src="https://fonts.gstatic.com/s/e/notoemoji/latest/1f30d/512.gif"
                alt="Handshake" />
              <div class="icon-glow"></div>
            </span>
            We Welcome Contributions!
          </h2>
          <p class="description">
            Your ideas and skills can help make justice accessible to everyone across the globe.
            Join us in improving this platform and simplify access to legal resources.
            <span class="emoji-icon justice-icon">
              <img
                src="https://fonts.gstatic.com/s/e/notoemoji/latest/2696_fe0f/512.gif"
                alt="Scales of Justice" />
              <div class="icon-glow"></div>
            </span>
          </p>
          <a
            href="https://github.com/dipexplorer/LegalHuB/"
            target="_blank"
            rel="noopener"
            class="cta-button">
            Become a Contributor
          </a>
        </div>
        <div class="banner-image">
          <div class="network-graphic">
            <div class="network-container">
              <div class="network-bg"></div>
              <div class="network-lines"></div>
              <img src="/pic/contributors.png" alt="Collaborative Network" />
              <div class="network-glow"></div>
              <div class="network-nodes">
                <div class="node node-1"></div>
                <div class="node node-2"></div>
                <div class="node node-3"></div>
                <div class="node node-4"></div>
                <div class="node node-5"></div>
                <div class="node node-6"></div>
                <div class="node node-7"></div>
                <div class="node node-8"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="banner-decoration">
        <div class="decoration-circle circle-1"></div>
        <div class="decoration-circle circle-2"></div>
        <div class="decoration-circle circle-3"></div>
      </div>
    </div>

    <div class="contribution-types">
      <div class="contribution-box">
        <div class="contribution-icon code-icon">
          <i class="fas fa-code"></i>
        </div>
        <h3>Code & Improve</h3>
        <p>Contribute to the codebase and enhance our platform</p>
      </div>

      <div class="contribution-box">
        <div class="contribution-icon design-icon">
          <i class="fas fa-palette"></i>
        </div>
        <h3>Design & UI</h3>
        <p>Help create a better user experience</p>
      </div>

      <div class="contribution-box">
        <div class="contribution-icon content-icon">
          <i class="fas fa-book"></i>
        </div>
        <h3>Legal Content</h3>
        <p>Provide legal insights and resources</p>
      </div>

      <div class="contribution-box">
        <div class="contribution-icon bug-icon">
          <i class="fas fa-bug"></i>
        </div>
        <h3>Identify Bugs</h3>
        <p>Help us find and report issues to improve quality</p>
      </div>

      <div class="contribution-box">
        <div class="contribution-icon docs-icon">
          <i class="fas fa-file-alt"></i>
        </div>
        <h3>Documentation</h3>
        <p>Improve guides and help resources for users</p>
      </div>
    </div>
  </section>

  <% if (repoStats) { %>
  <section class="stats-section">
    <div class="title">Project Statistics</div>
    <div class="stats-scroll-container">
      <button class="scroll-arrow left" aria-label="Previous stats">
        <i class="fas fa-chevron-left"></i>
      </button>
      <div class="stats-grid">
        <div class="stat-card rectangle wide-top">
          <i class="fas fa-users"></i>
          <div class="stat-content">
            <div class="stat-number"><%= repoStats.contributors ? repoStats.contributors : 'N/A' %></div>
            <div class="stat-label">Contributors</div>
            <div class="stat-description">People who make this project possible</div>
          </div>
        </div>
        <div class="stat-card square top-square-1">
          <i class="fas fa-code-commit"></i>
          <div class="stat-content">
            <div class="stat-number"><%= repoStats.commits ? repoStats.commits : 'N/A' %></div>
            <div class="stat-label">Commits</div>
            <div class="stat-change positive">+12% this month</div>
          </div>
        </div>
        <div class="stat-card square top-square-2">
          <i class="fas fa-star"></i>
          <div class="stat-content">
            <div class="stat-number"><%= repoStats.stars ? repoStats.stars : 'N/A' %></div>
            <div class="stat-label">Stars</div>
            <div class="stat-change positive">+8% this month</div>
          </div>
        </div>
        <div class="stat-card square top-square-3">
          <i class="fas fa-code-branch"></i>
          <div class="stat-content">
            <div class="stat-number"><%= repoStats.forks ? repoStats.forks : 'N/A' %></div>
            <div class="stat-label">Forks</div>
            <div class="stat-change neutral">+2% this month</div>
          </div>
        </div>
        <div class="stat-card square bot-square-1">
          <i class="fas fa-code-pull-request"></i>
          <div class="stat-content">
            <div class="stat-number"><%= repoStats.pulls ? repoStats.pulls : 'N/A' %></div>
            <div class="stat-label">PRs Merged</div>
            <div class="stat-change positive">+15% this month</div>
          </div>
        </div>
        <div class="stat-card square bot-square-2">
          <i class="fas fa-code"></i>
          <div class="stat-content">
            <div class="stat-number">JS / EJS</div>
            <div class="stat-label">Languages</div>
            <div class="stat-bar">
              <div class="stat-progress" style="width: 75%"></div>
            </div>
          </div>
        </div>
        <div class="stat-card square bot-square-3">
          <i class="fas fa-git-alt"></i>
          <div class="stat-content">
            <div class="stat-number"><%= repoStats.commits ? repoStats.commits : 'N/A' %></div>
            <div class="stat-label">Total Commits</div>
            <div class="stat-activity">
              <div class="activity-dot"></div>
              <div class="activity-dot"></div>
              <div class="activity-dot"></div>
              <div class="activity-dot"></div>
              <div class="activity-dot"></div>
            </div>
          </div>
        </div>
        <div class="stat-card rectangle wide-bottom">
          <i class="fas fa-check-double"></i>
          <div class="stat-content">
            <div class="stat-number"><%= repoStats.issuesClosed ? repoStats.issuesClosed : 'N/A' %></div>
            <div class="stat-label">Issues Closed (30d)</div>
            <div class="stat-metric">98% resolution rate</div>
          </div>
        </div>
      </div>
      <button class="scroll-arrow right" aria-label="Next stats">
        <i class="fas fa-chevron-right"></i>
      </button>
      <div class="scroll-indicator">
        <div class="scroll-dot active"></div>
        <div class="scroll-dot"></div>
        <div class="scroll-dot"></div>
      </div>
    </div>
  </section>
  <% } %>


  <section class="contributors-hero">
    <div class="container">
      <h1>Our Contributors</h1>
      <p>Huge thanks to everyone helping build LegalHuB.</p>
      <% if (repoStats) { %>
      <div class="repo-stats">
        <a href="<%= repoStats.repoHtmlUrl %>" target="_blank" rel="noopener" class="btn">GitHub Repo</a>
        <a href="<%= repoStats.pullsUrl %>" target="_blank" rel="noopener" class="btn">View PRs</a>
        <a href="<%= repoStats.issuesUrl %>" target="_blank" rel="noopener" class="btn">Open Issues</a>
        
        </div>
      <% } %>
    </div>
  </section>

  <section class="container contributors-container">
    <% if (!contributors || !contributors.length) { %>
    <p class="contributors-empty">
      No contributors found right now. Please try again later.
    </p>
    <% } else { %>
    <div class="contributors-grid">
      <% contributors.forEach(c => { %>
      <article class="contrib-card">
        <img src="<%= c.avatar_url %>" alt="<%= c.login %>" />
        <div class="contrib-name"><%= c.login %></div>
        <a
          class="contrib-link"
          href="<%= c.html_url %>"
          target="_blank"
          rel="noopener"
          >@<%= c.login %></a
        >
        <% if (typeof c.contributions !== 'undefined') { %>
        <div style="margin-top: 6px; font-size: 0.9rem; color: #666">
          ðŸ§© <%= c.contributions %> contributions
        </div>
        <% } %>
      </article>
      <% }) %>
    </div>
    <% } %>
  </section>
</div>

<script>
// Stats section horizontal scroll functionality
document.addEventListener('DOMContentLoaded', function() {
    // Check if we're on a small screen
    const isSmallScreen = window.innerWidth <= 640;

    // Get all necessary elements
    const scrollContainer = document.querySelector('.stats-scroll-container');
    const statsGrid = document.querySelector('.stats-grid');
    const leftArrow = document.querySelector('.scroll-arrow.left');
    const rightArrow = document.querySelector('.scroll-arrow.right');
    const scrollDots = document.querySelectorAll('.scroll-dot');

    // Only show scroll arrows on small screens
    if (leftArrow && rightArrow) {
        if (!isSmallScreen) {
            leftArrow.style.display = 'none';
            rightArrow.style.display = 'none';
        } else {
            leftArrow.style.display = 'flex';
            rightArrow.style.display = 'flex';
        }
    }

    // Only run on small screens where scroll container exists
    if (!isSmallScreen || !scrollContainer) return;

    // Function to update active scroll dot
    function updateScrollDots() {
        if (!scrollDots.length) return;

        // Calculate which card is most visible in center
        const containerRect = scrollContainer.getBoundingClientRect();
        const containerCenter = containerRect.left + containerRect.width / 2;

        const cards = document.querySelectorAll('.stat-card');
        let closestIndex = 0;
        let closestDistance = Infinity;

        cards.forEach((card, index) => {
            const cardRect = card.getBoundingClientRect();
            const cardCenter = cardRect.left + cardRect.width / 2;
            const distance = Math.abs(containerCenter - cardCenter);

            if (distance < closestDistance) {
                closestDistance = distance;
                closestIndex = index;
            }
        });

        // Update active dot
        scrollDots.forEach((dot, index) => {
            if (index === closestIndex) {
                dot.classList.add('active');
            } else {
                dot.classList.remove('active');
            }
        });
    }

    // Manual scroll with arrows
    function scrollLeft() {
        if (statsGrid) {
            statsGrid.scrollBy({
                left: -300,
                behavior: 'smooth'
            });
            setTimeout(updateScrollDots, 300); // Update after scroll animation
        }
    }

    function scrollRight() {
        if (statsGrid) {
            statsGrid.scrollBy({
                left: 300,
                behavior: 'smooth'
            });
            setTimeout(updateScrollDots, 300); // Update after scroll animation
        }
    }

    // Event listeners for arrow buttons
    if (leftArrow) {
        leftArrow.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            scrollLeft();
        });
    }

    if (rightArrow) {
        rightArrow.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            scrollRight();
        });
    }

    // Touch events for mobile
    let touchStartX = 0;
    let touchEndX = 0;

    if (statsGrid) {
        statsGrid.addEventListener('touchstart', function(e) {
            touchStartX = e.changedTouches[0].screenX;
        });

        statsGrid.addEventListener('touchend', function(e) {
            touchEndX = e.changedTouches[0].screenX;
            handleSwipe();
        });
    }

    function handleSwipe() {
        if (touchEndX < touchStartX - 50) {
            // Swiped left
            scrollRight();
        }
        if (touchEndX > touchStartX + 50) {
            // Swiped right
            scrollLeft();
        }
    }

    // Update dots on scroll
    if (statsGrid) {
        statsGrid.addEventListener('scroll', updateScrollDots);
    }

    // Handle window resize
    window.addEventListener('resize', function() {
        // Show/hide arrows based on new screen size
        const newIsSmallScreen = window.innerWidth <= 640;
        if (leftArrow && rightArrow) {
            if (!newIsSmallScreen) {
                leftArrow.style.display = 'none';
                rightArrow.style.display = 'none';
            } else {
                leftArrow.style.display = 'flex';
                rightArrow.style.display = 'flex';
            }
        }
    });

    // Initialize scroll dots
    setTimeout(updateScrollDots, 100);
});
</script>