<% layout("layouts/boilerplate") %>

<div class="container mt-4">
  <h2>Your Notifications</h2>
    <div class="notification-wrapper">
    <% if (notifications.length > 0) { %>
        <% notifications.forEach(n => { %>
        <% 
            let link = "#"; 
            if (n.type.startsWith("appointment") && n.relatedId) {
            link = `/api/appointment/${n.relatedId}/card/view`;
            }
        %>

        <a href="<%= link %>" class="notification-link">
            <div class="notification-card <%= n.status === 'unread' ? 'unread' : '' %>">
            <div class="notification-icon">
                <% if (n.type.startsWith("appointment")) { %>
                <i class="fas fa-calendar-check"></i>
                <% } else if (n.type === "system.alert") { %>
                <i class="fas fa-exclamation-circle"></i>
                <% } else { %>
                <i class="fas fa-bell"></i>
                <% } %>
            </div>
            <div class="notification-content">
                <strong><%= n.title %></strong>
                <p><%= n.message %></p>
                <small><i class="far fa-clock"></i> <%= n.createdAt.toLocaleString() %></small>
            </div>

            <% if (n.status === "unread") { %>
                <form method="POST" action="/api/notifications/<%= n._id %>/read" class="mark-read-form">
                <button class="btn btn-sm btn-outline-accent">Mark as Read</button>
                </form>
            <% } %>
            </div>
        </a>
        <% }) %>
    <% } else { %>
        <div class="notification-card empty">
        <div class="notification-content">
            <strong>No notifications yet.</strong>
        </div>
        </div>
    <% } %>
    </div>
</div>

<style>
  /* Wrapper */
  .notification-wrapper {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-top: 1.5rem;
  }

  /* Notification Card */
  .notification-card {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    gap: 15px;
    padding: 15px 20px;
    border-radius: 10px;
    background: #1e2235;
    border: 1px solid rgba(255,255,255,0.08);
    box-shadow: 0 4px 10px rgba(0,0,0,0.35);
    transition: all 0.3s ease;
  }

  .notification-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 15px rgba(0,0,0,0.45);
    background: #242842;
  }

  /* Unread highlight */
  .notification-card.unread {
    border-left: 4px solid #a64dff; /* purple accent */
    box-shadow: 0 0 12px rgba(166,77,255,0.3);
    background: rgba(166,77,255,0.08);
  }

  /* Icon */
  .notification-icon {
    font-size: 1.5rem;
    color: #a64dff; /* purple accent */
    flex-shrink: 0;
    margin-top: 3px;
  }

  /* Content */
  .notification-content {
    flex: 1;
    color: #d1d1d1;
  }

  .notification-content strong {
    font-size: 1rem;
    color: #fff;
    display: block;
    margin-bottom: 5px;
  }

  .notification-content p {
    margin: 0;
    font-size: 0.95rem;
    color: #c7c7c7;
    line-height: 1.4;
  }

  .notification-content small {
    display: inline-block;
    margin-top: 6px;
    font-size: 0.8rem;
    color: #9aa0b8;
  }

  /* Accent Button */
  .btn-outline-accent {
    border-radius: 20px;
    font-size: 0.75rem;
    padding: 6px 14px;
    transition: all 0.2s ease;
    border-color: #a64dff;
    color: #a64dff;
    background: transparent;
  }

  .btn-outline-accent:hover {
    background: #a64dff;
    color: #fff;
  }

  /* Empty state */
  .notification-card.empty {
    text-align: center;
    justify-content: center;
    padding: 25px;
    font-size: 1rem;
    color: #aaa;
    background: #1e2235;
  }

</style>
